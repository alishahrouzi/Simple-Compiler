
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEDIVIDE EQUALS ID INT MINUS NUMBER PLUS TIMESprogram : declaration_listdeclaration_list : declaration_list declaration\n                        | declarationdeclaration : var_declaration\n                   | statementvar_declaration : INT IDstatement : expression_statementexpression_statement : ID EQUALS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | NUMBER\n                  | ID'
    
_lr_action_items = {'INT':([0,2,3,4,5,8,9,10,12,13,14,19,20,21,22,],[6,6,-3,-4,-5,-7,-2,-6,-14,-8,-13,-9,-10,-11,-12,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[7,7,-3,-4,-5,10,-7,-2,-6,12,-14,-8,-13,12,12,12,12,-9,-10,-11,-12,]),'$end':([1,2,3,4,5,8,9,10,12,13,14,19,20,21,22,],[0,-1,-3,-4,-5,-7,-2,-6,-14,-8,-13,-9,-10,-11,-12,]),'EQUALS':([7,],[11,]),'NUMBER':([11,15,16,17,18,],[14,14,14,14,14,]),'PLUS':([12,13,14,19,20,21,22,],[-14,15,-13,-9,-10,-11,-12,]),'MINUS':([12,13,14,19,20,21,22,],[-14,16,-13,-9,-10,-11,-12,]),'TIMES':([12,13,14,19,20,21,22,],[-14,17,-13,17,17,-11,-12,]),'DIVIDE':([12,13,14,19,20,21,22,],[-14,18,-13,18,18,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,9,]),'var_declaration':([0,2,],[4,4,]),'statement':([0,2,],[5,5,]),'expression_statement':([0,2,],[8,8,]),'expression':([11,15,16,17,18,],[13,19,20,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parser_1.py',10),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser_1.py',14),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser_1.py',15),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parser_1.py',22),
  ('declaration -> statement','declaration',1,'p_declaration','parser_1.py',23),
  ('var_declaration -> INT ID','var_declaration',2,'p_var_declaration','parser_1.py',27),
  ('statement -> expression_statement','statement',1,'p_statement','parser_1.py',31),
  ('expression_statement -> ID EQUALS expression','expression_statement',3,'p_expression_statement','parser_1.py',35),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_1.py',39),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_1.py',40),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_1.py',41),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_1.py',42),
  ('expression -> NUMBER','expression',1,'p_expression','parser_1.py',43),
  ('expression -> ID','expression',1,'p_expression','parser_1.py',44),
]
